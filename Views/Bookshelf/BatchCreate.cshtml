@model IEnumerable<MyLibrary.ViewModel.BookshelfAddViewModel>

@{
    ViewBag.Title = "BatchCreateBookshelf";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>BatchCreateBookshelf</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>BookshelfAddViewModel</h4>
    @{int index = 0;
    }
    @foreach (var item in Model)
    {
        <hr />
       
        var fieldPrefix = string.Format("[{0}].", index);

        @Html.Hidden(fieldPrefix + "LibraryId", item.LibraryId);
        @Html.Hidden(fieldPrefix + "BookshelfId", item.BookshelfId);


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(modelItem => item.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea(fieldPrefix + "Description", item.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => item.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(modelItem => item.NumberOfShelves, "Shelves", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor(fieldPrefix + "NumberOfShelves", item.NumberOfShelves.ToString(), new { htmlAttributes = new { @type = "number", @min = "1", @step = "1", @value = "1" } })
                @Html.ValidationMessageFor(modelItem => item.NumberOfShelves, "", new { @class = "text-danger" })
            </div>
        </div>

        index++;
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
